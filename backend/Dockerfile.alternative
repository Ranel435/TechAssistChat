FROM golang:1.23-alpine AS builder

WORKDIR /app

# Используем альтернативные прокси
ENV GOPROXY=https://goproxy.cn,https://proxy.golang.org,direct
ENV GOSUMDB=off
ENV GO111MODULE=on

RUN apk add --no-cache git ca-certificates

COPY go.mod go.sum ./

# Пробуем разные варианты загрузки
RUN go mod download || \
    GOPROXY=https://goproxy.cn,direct go mod download || \
    GOPROXY=direct go mod download

COPY . .

RUN go get golang.org/x/crypto/bcrypt || true
RUN go get github.com/golang-jwt/jwt/v5 || true
RUN go get github.com/lib/pq || true

RUN go mod tidy || true

RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags="-w -s" -o main ./cmd/server

FROM alpine:latest
RUN apk --no-cache add ca-certificates tzdata wget
RUN addgroup -g 1001 -S appgroup && adduser -u 1001 -S appuser -G appgroup
WORKDIR /root/
COPY --from=builder /app/main .
RUN chown -R appuser:appgroup /root/
USER appuser
EXPOSE 8080
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1
CMD ["./main"] 