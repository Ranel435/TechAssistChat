services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: techassistchat_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: techassistchat
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - techassistchat_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Backend (Go WebSocket Server)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: techassistchat_backend
    environment:
      # Database settings
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: techassistchat
      DB_SSL_MODE: disable
      # Server settings
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - techassistchat_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  react-frontend:
    build:
      context: ./react-frontend
      dockerfile: Dockerfile
    container_name: techassistchat_react_frontend
    ports:
      - "3100:80"
    depends_on:
      - backend
    networks:
      - techassistchat_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Old Frontend (optional, for comparison)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: techassistchat_frontend
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - techassistchat_network
    restart: unless-stopped
    profiles:
      - old-frontend

volumes:
  postgres_data:

networks:
  techassistchat_network:
    driver: bridge
